bindir = @bindir@
exec_prefix = @exec_prefix@
prefix = @prefix@

include @abs_top_srcdir@/common.mk
REL_DIR	=	tests/mx/

THREADED_TESTS	=	mx_wakeup_test
ifneq (@OMX_LIB_THREAD_SAFETY@,1)
	IGNORED_TESTS	=	$(THREADED_TESTS)
endif

SRCS	=	$(wildcard @srcdir@/*.c)
OBJS	=	$(patsubst @srcdir@/%.c,%.o,$(SRCS))
TESTS	=	$(filter-out $(IGNORED_TESTS),$(subst .o,,$(OBJS)))

CC	=	@CC@
LD	=	$(CC) #FIXME
MKDIR_P	=	@MKDIR_P@
INSTALL	=	@INSTALL@

CPPFLAGS	+=	-I@top_srcdir@/common/mx/translate # for translation wrappers
CPPFLAGS	+=	-I@top_srcdir@/common # for open-mx.h used after translation
CPPFLAGS	+=	-I@top_builddir@/common # for omx_config.h for test_common.h
CPPFLAGS	+=	@CPPFLAGS@

CFLAGS	+=	-Wall
CFLAGS	+=	@CFLAGS@
ifeq (@omx_debug_tests@,1)
	CFLAGS	+=	@DBGCFLAGS@
endif

STATIC_LIB	=	@top_builddir@/@OPEN_MX_DEFAULT_LIB_STATIC_PATH@
DYNAMIC_LIB_DIR	=	$(dir @top_builddir@/@OPEN_MX_DEFAULT_LIB_DYNAMIC_PATH@)
DYNAMIC_LIB_OPT	=	@MX_LIB_DYNAMIC_LINK_OPT@

.PHONY: all installonly install clean distclean

mx_wakeup_test_LIBS	=	-lpthread
mx_stream_LIBS	=	-lpthread

all: $(TESTS)

###############
# dependencies

DEPS	=	$(subst .o,.d,$(OBJS))
DEPSRCDIR	=	@srcdir@/
include @top_srcdir@/depend.mk

########
# build

ifeq (@OMX_DYNAMIC_TOOLS@,1)
$(TESTS): %: %.o
	$(CMDECHO) "  LD      $(REL_DIR)$@"
	$(CMDPREFIX) $(LD) $^ -L $(DYNAMIC_LIB_DIR) $(DYNAMIC_LIB_OPT) $($(@)_LIBS) -o $@
else
$(TESTS): %: %.o $(STATIC_LIB)
	$(CMDECHO) "  LD      $(REL_DIR)$@"
	$(CMDPREFIX) $(LD) $^ $($(@)_LIBS) -o $@
endif

# build and create dependency file
$(OBJS): %.o: @srcdir@/%.c
	$(CMDECHO) "  CC      $(REL_DIR)$@"
	$(CMDPREFIX) $(CC) -c $(CPPFLAGS) $(CFLAGS) $(BUILDDEPFLAGS) $< -o $@

##########
# install

install installonly:
	$(CMDECHO) "  MKDIR   $(DESTDIR)$(bindir)/"
	$(CMDPREFIX)  if test ! -d $(DESTDIR)$(bindir); then \
		$(MKDIR_P) $(DESTDIR)$(bindir) ; \
	fi

	$(CMDECHO) "  INSTALL $(patsubst %,$(DESTDIR)$(bindir)/%,$(TESTS))"
	$(CMDPREFIX) $(INSTALL) -m 0755 $(TESTS) $(DESTDIR)$(bindir)/

########
# clean

clean:
	$(CMDECHO) "  RM      $(patsubst %,$(REL_DIR)%,$(TESTS)) $(patsubst %,$(REL_DIR)%,$(OBJS))"
	$(CMDPREFIX) $(RM) $(TESTS) $(OBJS)

distclean: clean
	$(CMDECHO) "  RM      $(patsubst %,$(REL_DIR)%,$(DEPS))"
	$(CMDPREFIX) $(RM) $(DEPS)
